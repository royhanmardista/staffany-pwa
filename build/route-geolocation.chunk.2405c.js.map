{"version":3,"sources":["webpack:///./routes/geolocation/index.js"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","Footer","_templateObject3","Content","_templateObject4","ConfirmButton","button","_templateObject5","Geolocation","_useState2","_slicedToArray","useState","long","setLong","_useState4","lat","setLat","_useState6","err","setErr","showPosition","position","coords","latitude","longitude","useEffect","navigator","geolocation","getCurrentPosition","console","log","h","onClick","route"],"mappings":"mzCA0CMA,EAAYC,IAAOC,IAAGC,MAAAC,EAAA,wFAMtBC,EAASJ,IAAOC,IAAGI,MAAAF,EAAA,kCAGnBG,EAASN,IAAOC,IAAGM,MAAAJ,EAAA,wCAGnBK,EAAUR,IAAOC,IAAGQ,MAAAN,EAAA,yDAIpBO,EAAgBV,IAAOW,OAAMC,MAAAT,EAAA,oRAoBpBU,UA1EK,WAClB,IAAoCC,EAAAC,EAAZC,YAAS,IAAG,GAA7BC,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GACcK,EAAAJ,EAAZC,YAAS,IAAG,GAA3BI,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GACmBG,EAAAP,EAAfC,aAAS,GAAM,GAA9BO,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAUZG,EAAe,SAACC,GACpBL,EAAOK,EAASC,OAAOC,UACvBV,EAAQQ,EAASC,OAAOE,UAC1B,EAKA,OAJAC,aAAU,WAXJC,UAAUC,YACZD,UAAUC,YAAYC,mBAAmBR,IAEzCD,GAAO,GACPU,QAAQC,IAAI,iDAShB,IAGEC,EAACrC,EAAS,KACRqC,EAAChC,EAAM,KACLgC,EAAA,UAAI,gBAENA,EAAC5B,EAAO,KACLe,EAAMa,EAAA,SAAG,iDAAoD,KAC9DA,EAAA,UAAI,aAAWhB,GACfgB,EAAA,UAAI,cAAYnB,IAElBmB,EAAC9B,EAAM,KACL8B,EAAC1B,EAAa,CAAC2B,QAAS,kBAAMC,YAAM,SAAS,GAAE,YAIvD,C","file":"route-geolocation.chunk.2405c.js","sourcesContent":["import { route } from \"preact-router\";\nimport { useEffect, useState } from \"preact/hooks\";\nimport styled from \"styled-components\";\n\nconst Geolocation = () => {\n  const [long, setLong] = useState(\"\");\n  const [lat, setLat] = useState(\"\");\n  const [err, setErr] = useState(false);\n\n  const getGeoLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(showPosition);\n    } else {\n      setErr(true);\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  };\n  const showPosition = (position) => {\n    setLat(position.coords.latitude);\n    setLong(position.coords.longitude);\n  };\n  useEffect(() => {\n    getGeoLocation();\n  });\n\n  return (\n    <Container>\n      <Header>\n        <h1>Geolocation</h1>\n      </Header>\n      <Content>\n        {err ? <p>Geolocation is not supported by this browser.</p> : null}\n        <h1>Latitude: {lat}</h1>\n        <h1>Longitude: {long}</h1>\n      </Content>\n      <Footer>\n        <ConfirmButton onClick={() => route(\"/home2\")}>Confirm</ConfirmButton>\n      </Footer>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n`;\nconst Header = styled.div`\n  align-items: center;\n`;\nconst Footer = styled.div`\n  background-color: #ffffff;\n`;\nconst Content = styled.div`\n  background-color: #d9d9d9;\n  padding 10px;\n`;\nconst ConfirmButton = styled.button`\n  padding: 8px 24px;\n\n  width: 100%;\n  height: 40px;\n\n  background: #45beb4;\n  border-radius: 4px;\n\n  border: none;\n\n  font-family: \"Montserrat\";\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n\n  margin-top: 20px;\n`;\n\nexport default Geolocation;\n"],"sourceRoot":""}